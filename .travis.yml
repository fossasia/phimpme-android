language: android
jdk: oraclejdk8
sudo: false
env:
  global:
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    - ANDROID_ABI=armeabi-v7a arm64-v8a x86 x86_64
    - ANDROID_TAG=google_apis
    - ANDROID_TARGET=android-28
    - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)

android:
  components:
    - tools
    - platform-tools
    - android-$ANDROID_API_LEVEL
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - android-$ANDROID_API_LEVEL
    # For Google APIs
    - addon-google_apis-google-$ANDROID_API_LEVEL
    # Google Play Services
    - extra-google-google_play_services
    # Support library
    - extra-android-support
    # Latest artifacts in local repository
    - extra-google-m2repository
    - extra-android-m2repository
    - android-sdk-license-.+
    - '.+'
    # Specify at least one system image
    - sys-img-arm64-v8a-android-26

# prevents reuploading of Cache
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:
    - "${TRAVIS_BUILD_DIR}/android/gradle/caches/"
    - "${TRAVIS_BUILD_DIR}/android/gradle/wrapper/dists/"
    - "$HOME/android/.gradle/caches/"
    - "$HOME/android/.gradle/wrapper/"
    - "$HOME/.android/build-cache"

before_install:
  - curl https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip -o android-ndk-r18b.zip
  - unzip -q android-ndk-r18b.zip && rm android-ndk-r18b.zip
  - mv android-ndk-r18b $HOME
  - export ANDROID_NDK=$HOME/android-ndk-r18b

licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'

install:
  - ./scripts/download_open_cv.sh
  - echo "Starting AVD"
  - echo y | sdkmanager "platforms;android-26" >/dev/null # We need the API of the emulator we will run
  - echo no | android create avd --force -n test -t android-28 --abi arm64-v8a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
  - ./gradlew spotlessCheck
  - ./scripts/copy_opencv.sh
  - ./gradlew build
  - ./gradlew build connectedAndroidTest jacocoTestReport --stacktrace

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - bash scripts/prep-key.sh
  - bash scripts/update-apk.sh

notifications:
  slack: fossasia:JgzycrBUs0nKnmJhsAxCB4bL
